Stopwatch App Source Code
Section 17, Lecture 93
Source code:

activity_stopwatch.java

package com.example.application.mystopwatch;

import android.app.Activity;

import android.os.Bundle;

import android.os.Handler;

import android.support.v7.app.AppCompatActivity;

import android.view.TextureView;

import android.view.View;

import android.widget.TextView;

public class activity_stopwatch extends Activity {

private int seconds=0;

private boolean running;

@Override

protected void onCreate(Bundle savedInstanceState) {

super.onCreate(savedInstanceState);

setContentView(R.layout.activity_activity_stopwatch);

if(savedInstanceState !=null)

{

seconds=savedInstanceState.getInt("seconds");

running=savedInstanceState.getBoolean("running");

}

runTimer();

}

public void onSaveInstanceState(Bundle savedInstanceState)

{

savedInstanceState.putInt("seconds",seconds);

savedInstanceState.putBoolean("running",running);

}

public void onClickStart(View view)

{

running=true;

}

public void onClickStop(View view)

{

running=false;

}

public void onClickReset(View view)

{

running=false;

seconds=0;

}

private void runTimer()

{

final TextView timeView= (TextView)findViewById(R.id.time_view);

final Handler handler = new Handler();

handler.post(new Runnable() {

@Override

public void run() {

int hours = seconds / 3600;

int minutes = (seconds % 3600) / 60;

int secs = seconds % 60;

String time = String.format("%d:%02d:%02d", hours, minutes, secs);

timeView.setText(time);

if (running) {

seconds++;

}

handler.postDelayed(this,1000);

}

});

}

}

content_activity_stopwatch.xml

<?xml version="1.0" encoding="utf-8"?>

<RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"

xmlns:app="http://schemas.android.com/apk/res-auto"

xmlns:tools="http://schemas.android.com/tools"

android:layout_width="match_parent"

android:layout_height="match_parent"

android:paddingBottom="@dimen/activity_vertical_margin"

android:paddingLeft="@dimen/activity_horizontal_margin"

android:paddingRight="@dimen/activity_horizontal_margin"

android:paddingTop="@dimen/activity_vertical_margin"

app:layout_behavior="@string/appbar_scrolling_view_behavior"

tools:context="com.example.application.mystopwatch.activity_stopwatch"

tools:showIn="@layout/activity_activity_stopwatch"

android:background="@drawable/image">

<TextView

android:layout_width="wrap_content"

android:layout_height="wrap_content"

android:textAppearance="?android:attr/textAppearanceLarge"

android:text=""

android:id="@+id/time_view"

android:layout_alignParentTop="true"

android:layout_centerHorizontal="true"

android:layout_marginTop="73dp"

android:textSize="92sp"

/>

<Button

android:layout_width="wrap_content"

android:layout_height="wrap_content"

android:text="@string/start"

android:id="@+id/start_button"

android:layout_below="@+id/time_view"

android:layout_centerHorizontal="true"

android:layout_marginTop="110dp"

android:onClick="onClickStart" />

<Button

android:layout_width="wrap_content"

android:layout_height="wrap_content"

android:text="@string/stop"

android:id="@+id/stop_button"

android:layout_below="@+id/start_button"

android:layout_centerHorizontal="true"

android:onClick="onClickStop" />

<Button

android:layout_width="wrap_content"

android:layout_height="wrap_content"

android:text="@string/reset"

android:id="@+id/reset_button"

android:layout_below="@+id/stop_button"

android:layout_centerHorizontal="true"

android:onClick="onClickReset" />

</RelativeLayout>

strings.xml

<resources>

<string name="app_name">MyStopwatch</string>

<string name="action_settings">Settings</string>

<string name="start">Start</string>

<string name="stop">Stop</string>

<string name="reset">Reset</string>

</resources>